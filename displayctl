#!/usr/bin/env bash
# displayctl
#
# Resolution / wallpapers management made simple.

# Use xrdb_get_record() to query xrdb and get the specified record.
function xrdb_get_record()
{
    xrdb -query | grep -i "$1" | cut -d ":" -f 2 | sed -e 's/^[ \t]*//'
}

OUTPUT=`xrdb_get_record Display.monitor`
DPI=`xrdb_get_record Display.dpi`
RESOLUTION=`xrdb_get_record Display.resolution`
BRIGHTNESS=`xrdb_get_record Display.brightness`

WALLPAPER=`xrdb_get_record Display.wallpaper`
LOCKSCREEN=`xrdb_get_record Display.lockscreen`

wall_cache=/tmp/wall.png
lock_cache=/tmp/lock.png


function print_usage {
    echo ""
    echo "Usage: $0 <argument>"
    echo "-d --display                 - Sets the screen size and brightness."
    echo "-e --external <resolution>   - Mirrors the screen to an external monitor."
    echo ""
    echo "-w --wall                    - Sets the desktop wallpaper."
    echo "-l --lock                    - Locks the screen (i3lock)."
    echo ""
    echo "-c --clear-cache             - Clears previous lockscreen cache."
    echo "-h --help                    - Displays help message."
    echo "-v --version                 - Displays version info."
    echo ""
    echo "Note: requires imagemagick, ffmpeg, i3lock-color, light, xrandr as dependencies."
}

function print_version {
    echo "displayctl 0.2 (beta)"
    echo "Copyright (C) 2018 Marco Wang"
    echo "" 
    echo "This is free software, see the source for copying conditions.  There is NO"
    echo "warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE"
} 


# Sets the resolution for current screen based on value in config.
function set_resolution {
    xrandr 1>/dev/null && xrandr --output $OUTPUT --mode $RESOLUTION --dpi $DPI    
}

# Adjusts screen brightness based on value in config.
function set_brightness {
    light -S $BRIGHTNESS
}

# Sets the image at $cache as wallpaper.
function set_wallpaper {
    feh --bg-tile $1 --no-fehbg
}

# Scales wallpaper cache to your screen resolution.
function scale_image {
    convert $1 -resize $RESOLUTION! $1
}

# Applies dim effect to wallpaper cache.
function dim_image {
    convert $1 -fill black -colorize 35% $1
}

# Applies blur effect to wallpaper cache.
function blur_image {
    convert $1 -blur 0x18 $1
}

# Draws a rectangle on lockscreen.
function draw_rectangle {
    # $1: The image to draw an rectangle on.
    rectangles=" "
    SR=$(xrandr --query | grep ' connected' | grep -o '[0-9][0-9]*x[0-9][0-9]*[^ ]*')
    for RES in $SR; do
        SRA=(${RES//[x+]/ })
        CX=$((${SRA[2]} + 25))
        CY=$((${SRA[1]} - 30))
        rectangles+="rectangle $CX,$CY $((CX+325)),$((CY-100)) "
    done
    convert $1 -draw "fill black fill-opacity 0.6 $rectangles" $1
}

# Invokes i3lock.
function lock {
    # $1: Lockscreen image path
    letterEnteredColor=ba5e5fff
    letterRemovedColor=ba5e5fff
    passwordCorrect=00000000
    passwordIncorrect=ba5e5fff
    background=00000000
    foreground=ffffffff
    LD_PRELOAD=/usr/lib/gcc/x86_64-pc-linux-gnu/7.3.0/libasan.so.4 i3lock \
	-n -i "$1" \
        --timepos="x+105:h-70" \
        --datepos="x+130:h-45" \
	--clock --datestr "Type password to unlock..." \
	--insidecolor=$background --ringcolor=$foreground --line-uses-inside \
	--keyhlcolor=$letterEnteredColor --bshlcolor=$letterRemovedColor --separatorcolor=$background \
	--insidevercolor=$passwordCorrect --insidewrongcolor=$passwordIncorrect \
	--ringvercolor=$foreground --ringwrongcolor=$foreground --indpos="x+260:h-70" \
	--radius=17 --ring-width=9 --veriftext="" --wrongtext="" \
	--timecolor="$foreground" --datecolor="$foreground"
}

# Clears image cache.
function clear_lock_cache {
    if [ -f $lock_cache ]; then rm $lock_cache; fi
}


case "$1" in
    "")
        set_resolution
        set_brightness
        
        cp $WALLPAPER $wall_cache
        scale_image $wall_cache
        set_wallpaper $wall_cache
        ;;
        
    -d | --display)
        set_resolution
        set_brightness
        ;;
        
    -w | --wall)
        # Create cache of user's wallpaper and scale it to user's resolution.
        cp $WALLPAPER $wall_cache
        scale_image $wall_cache
        
        # Process the cache.
        # Apply dim/blur effect based on user's decision.
        case "$2" in
            "")
                ;;
                
            -b | --blur)
                blur_image $wall_cache
                
                case "$3" in
                    "")
                        ;;
                    -d | --dim)
                        dim_image $wall_cache
                        ;;
                    *)
                        echo "No such option: $3"
                        print_usage
                        ;;
                esac
                ;;
                
            -d | --dim)
                dim_image $wall_cache
                
                case "$3" in
                    "")
                        ;;
                    -b | --blur)
                        blur_image $wall_cache
                        ;;
                    *)
                        echo "No such option: $3"
                        print_usage
                        ;;
                esac
                ;;
                
            *)
                echo "No such option: $2"
                print_usage
                ;;
        esac
        
        set_wallpaper $wall_cache
        ;;
        
    -l | --lock)
        if [ -f $lock_cache ]; then
            echo "Using previous lockscreen cache."
            echo "Run displayctl --clear-cache before applying new effects to your lockscreen."
        else
            echo -n "Generating lockscreen cache, please wait... "
            cp $LOCKSCREEN $lock_cache
            scale_image $lock_cache
            
            case "$2" in
                "")
                    ;;
                    
                -b | --blur)
                    blur_image $lock_cache
                    
                    case "$3" in
                        "")
                            ;;
                        -d | --dim)
                            dim_image $lock_cache
                            ;;
                        *)
                            echo "No such option: $3"
                            print_usage
                            ;;
                    esac
                    ;;
                    
                -d | --dim)
                    dim_image $lock_cache
                    
                    case "$3" in
                        "")
                            ;;
                        -b | --blur)
                            blur_image $lock_cache
                            ;;
                        *)
                            echo "No such option: $3"
                            print_usage
                            ;;
                    esac
                    ;;
                    
                *)
                    echo "No such option: $2"
                    print_usage
                    ;;
            esac
            
            draw_rectangle $lock_cache
            echo "[Complete]"
        fi
        
        lock $lock_cache
        ;;
        
    -e | --external) 
        case "$2" in
            "")
                echo "Please provide a resolution for external display."
                print_usage
                ;;
                
            *)
                # Regex check. $2 should be something like 1680x1050.
                if [[ $3 =~ ^[0-9]{,4}x[0-9]{,4}$ ]]; then
                    echo -n "Mirroring display to external monitor, please wait... "
                    xrandr --output $OUTPUT --mode $3
                    xrandr --addmode $2 $3
                    xrandr --output $2 --mode $3 --same-as $OUTPUT
                    echo "[Complete]"
                else
                    echo "The resolution should be something like: 1680x1050"
                    print_usage
                fi
                ;;
        esac
        ;;
        
    -c | --clear-lock-cache)
        clear_lock_cache
        echo "The lockscreen cache has been cleared."
        ;;
        
    -h | --help)
        print_usage
        ;;
        
    -v | --version)
        print_version
        ;;
        
    *)
        print_usage
        ;;
esac
